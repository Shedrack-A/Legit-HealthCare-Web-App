"""Initial migration.

Revision ID: 1af89fe2d976
Revises:
Create Date: 2025-10-19 10:13:10.806309

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1af89fe2d976'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branding',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic_name', sa.String(length=100), nullable=False),
    sa.Column('logo_light', sa.String(length=255), nullable=True),
    sa.Column('logo_dark', sa.String(length=255), nullable=True),
    sa.Column('logo_home', sa.String(length=255), nullable=True),
    sa.Column('report_header', sa.String(length=255), nullable=True),
    sa.Column('report_signature', sa.String(length=255), nullable=True),
    sa.Column('report_footer', sa.String(length=255), nullable=True),
    sa.Column('doctor_name', sa.String(length=100), nullable=True),
    sa.Column('doctor_title', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('is_group', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('system_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('other_name', sa.String(length=50), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=60), nullable=False),
    sa.Column('otp_secret', sa.String(length=16), nullable=True),
    sa.Column('otp_enabled', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation_participants',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'conversation_id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.String(length=50), nullable=False),
    sa.Column('patient_id', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('middle_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('contact_phone', sa.String(length=20), nullable=False),
    sa.Column('email_address', sa.String(length=120), nullable=False),
    sa.Column('race', sa.String(length=50), nullable=False),
    sa.Column('nationality', sa.String(length=50), nullable=False),
    sa.Column('date_registered', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id'),
    sa.UniqueConstraint('staff_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('temporary_access_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('expiration', sa.DateTime(), nullable=False),
    sa.Column('use_type', sa.String(length=20), nullable=False),
    sa.Column('times_used', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('audiometry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('audiometry_result', sa.Text(), nullable=True),
    sa.Column('audiometry_remark', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_table('consultation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('luts', sa.String(length=50), nullable=True),
    sa.Column('chronic_cough', sa.String(length=50), nullable=True),
    sa.Column('chronic_chest_pain', sa.String(length=50), nullable=True),
    sa.Column('chest_infection', sa.String(length=50), nullable=True),
    sa.Column('heart_dx', sa.String(length=50), nullable=True),
    sa.Column('palor', sa.String(length=50), nullable=True),
    sa.Column('jaundice', sa.String(length=50), nullable=True),
    sa.Column('murmur', sa.String(length=50), nullable=True),
    sa.Column('chest', sa.String(length=50), nullable=True),
    sa.Column('prostrate_specific_antigen', sa.String(length=50), nullable=True),
    sa.Column('psa_remark', sa.Text(), nullable=True),
    sa.Column('fbs', sa.String(length=50), nullable=True),
    sa.Column('rbs', sa.String(length=50), nullable=True),
    sa.Column('fbs_rbs_remark', sa.String(length=50), nullable=True),
    sa.Column('urine_analysis', sa.String(length=100), nullable=True),
    sa.Column('ua_remark', sa.String(length=50), nullable=True),
    sa.Column('diabetes_mellitus', sa.String(length=100), nullable=True),
    sa.Column('hypertension', sa.String(length=100), nullable=True),
    sa.Column('bp', sa.String(length=20), nullable=True),
    sa.Column('pulse', sa.String(length=20), nullable=True),
    sa.Column('spo2', sa.String(length=20), nullable=True),
    sa.Column('hs', sa.String(length=50), nullable=True),
    sa.Column('breast_exam', sa.String(length=50), nullable=True),
    sa.Column('breast_exam_remark', sa.Text(), nullable=True),
    sa.Column('abdomen', sa.String(length=50), nullable=True),
    sa.Column('assessment_hx_pe', sa.String(length=100), nullable=True),
    sa.Column('other_assessments', sa.Text(), nullable=True),
    sa.Column('overall_lab_remark', sa.Text(), nullable=True),
    sa.Column('other_remarks', sa.Text(), nullable=True),
    sa.Column('overall_assessment', sa.Text(), nullable=True),
    sa.Column('comment_one', sa.Text(), nullable=True),
    sa.Column('comment_two', sa.Text(), nullable=True),
    sa.Column('comment_three', sa.Text(), nullable=True),
    sa.Column('comment_four', sa.Text(), nullable=True),
    sa.Column('director_review_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_table('ecg',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('ecg_result', sa.Text(), nullable=True),
    sa.Column('remark', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_table('full_blood_count',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('hct', sa.Float(), nullable=True),
    sa.Column('wbc', sa.Float(), nullable=True),
    sa.Column('plt', sa.Float(), nullable=True),
    sa.Column('lymp_percent', sa.Float(), nullable=True),
    sa.Column('lymp', sa.Float(), nullable=True),
    sa.Column('gra_percent', sa.Float(), nullable=True),
    sa.Column('gra', sa.Float(), nullable=True),
    sa.Column('mid_percent', sa.Float(), nullable=True),
    sa.Column('mid', sa.Float(), nullable=True),
    sa.Column('rbc', sa.Float(), nullable=True),
    sa.Column('mcv', sa.Float(), nullable=True),
    sa.Column('mch', sa.Float(), nullable=True),
    sa.Column('mchc', sa.Float(), nullable=True),
    sa.Column('rdw', sa.Float(), nullable=True),
    sa.Column('pdw', sa.Float(), nullable=True),
    sa.Column('hgb', sa.Float(), nullable=True),
    sa.Column('fbc_remark', sa.Text(), nullable=True),
    sa.Column('other_remarks', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_table('kidney_function_test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('k', sa.Float(), nullable=True),
    sa.Column('na', sa.Float(), nullable=True),
    sa.Column('cl', sa.Float(), nullable=True),
    sa.Column('ca', sa.Float(), nullable=True),
    sa.Column('hc03', sa.Float(), nullable=True),
    sa.Column('urea', sa.Float(), nullable=True),
    sa.Column('cre', sa.Float(), nullable=True),
    sa.Column('kft_remark', sa.Text(), nullable=True),
    sa.Column('other_remarks', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_table('lipid_profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('tcho', sa.Float(), nullable=True),
    sa.Column('tg', sa.Float(), nullable=True),
    sa.Column('hdl', sa.Float(), nullable=True),
    sa.Column('ldl', sa.Float(), nullable=True),
    sa.Column('lp_remark', sa.Text(), nullable=True),
    sa.Column('other_remarks', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_table('liver_function_test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('ast', sa.Float(), nullable=True),
    sa.Column('alt', sa.Float(), nullable=True),
    sa.Column('alp', sa.Float(), nullable=True),
    sa.Column('tb', sa.Float(), nullable=True),
    sa.Column('cb', sa.Float(), nullable=True),
    sa.Column('lft_remark', sa.Text(), nullable=True),
    sa.Column('other_remarks', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_table('screening_bio_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_comprehensive_id', sa.Integer(), nullable=False),
    sa.Column('patient_id_for_year', sa.String(length=50), nullable=False),
    sa.Column('screening_year', sa.Integer(), nullable=False),
    sa.Column('company_section', sa.String(length=10), nullable=False),
    sa.Column('date_registered', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_comprehensive_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_comprehensive_id', 'screening_year', 'company_section', name='_patient_comprehensive_year_company_uc'),
    sa.UniqueConstraint('patient_id_for_year', 'screening_year', 'company_section', name='_patient_id_year_company_uc')
    )
    op.create_table('spirometry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('spirometry_result', sa.Text(), nullable=True),
    sa.Column('spirometry_remark', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('spirometry')
    op.drop_table('screening_bio_data')
    op.drop_table('liver_function_test')
    op.drop_table('lipid_profile')
    op.drop_table('kidney_function_test')
    op.drop_table('full_blood_count')
    op.drop_table('ecg')
    op.drop_table('consultation')
    op.drop_table('audiometry')
    op.drop_table('user_roles')
    op.drop_table('temporary_access_code')
    op.drop_table('role_permissions')
    op.drop_table('patient')
    op.drop_table('message')
    op.drop_table('conversation_participants')
    op.drop_table('audit_log')
    op.drop_table('user')
    op.drop_table('system_config')
    op.drop_table('role')
    op.drop_table('permission')
    op.drop_table('conversation')
    op.drop_table('branding')
    # ### end Alembic commands ###
